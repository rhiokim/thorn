
#user  nobody;
worker_processes  1;

load_module "/usr/modules/ngx_http_log_zmq_module.so";

#error_log  /var/log/nginx/error.log debug;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include     mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    #############################################
    # Naxsi Configuration
    #############################################
    include     /etc/nginx/naxsi_core.rules;

    #############################################
    # ZeroMQ Configuration
    #############################################
    # simple message to an IPC endpoint with 4 threads and 1000 queue elements

    log_zmq_server main 172.17.0.2:5556 tcp 4 1000;

    log_zmq_endpoint  main "";

    log_zmq_format main '{"remote_addr":"$remote_addr", "remote_user":"$remote_user",'
                        '"request":"$request", "status":"$status",'
                        '"body_bytes_sent":"$body_bytes_sent",'
                        '"http_referer": "$http_referer", "http_user_agent":"$http_user_agent",'
                        '"http_x_forwarded_for": "$http_x_forwarded_for",'
                        '"time_local":"$time_local"}';

    # send messages to a subscriber listening at 172.17.0.2:5556
    # log_zmq_server secondary 172.17.0.6:5557 tcp 4 1000;

    # set secondary endpoint
    # log_zmq_endpoint secondary "/endpoint/";

    # set format using multiline
    # log_zmq_format secondary '{"request_uri":"$request_uri",'
    #                           '{"status":"$status"}';

    server {
        listen       80;
        server_name  naxsi_server;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;
        access_log    /var/log/nginx/localhost_access80.log;
        error_log     /var/log/nginx/localhost_error80.log debug;

        # NAXSI_EXLOG
        set $naxsi_extensive_log 1;

        location / {
            proxy_pass  http://10.40.219.150:8101/;
            proxy_set_header  Host  wordpress;

            # enabled learn mode
            LearningMode;

            SecRulesEnabled;
            DeniedUrl  "/RequestDenied";

            ## check rules ##
            CheckRule  "$SQL >= 8" BLOCK;
            CheckRule  "$RFI >= 8" BLOCK;
            CheckRule  "$TRAVERSAL >= 4" BLOCK;
            CheckRule  "$EVADE >= 4" BLOCK;
            CheckRule  "$XSS >= 8" BLOCK;
        }

        location /a {
            proxy_pass  http://10.40.219.150:8082/;
            proxy_set_header  Host  node.js;

            # enabled learn mode
            LearningMode;

            SecRulesEnabled;
            DeniedUrl  "/RequestDenied";

            ## check rules ##
            CheckRule  "$SQL >= 8" BLOCK;
            CheckRule  "$RFI >= 8" BLOCK;
            CheckRule  "$TRAVERSAL >= 4" BLOCK;
            CheckRule  "$EVADE >= 4" BLOCK;
            CheckRule  "$XSS >= 8" BLOCK;
        }

        location /RequestDenied {
            return  418;
        }

        # Zero MQ
        location /status {
            # mute all messages from log_zmq for this location

            # log_zmq_off all;
        }

        # Zero MQ
        location /endpoint {
            # mute main messages from log_zmq for this location

            # log_zmq_off main;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
#daemon off;
